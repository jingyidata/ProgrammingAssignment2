install.packages(slidify)
install.packages("slidify")
install.packages(c(ggplot2,devtools))
install.packages(devtools)
install.packages("slidify")
install.packages("ggplot2)
install.packages("ggplot2)
install.packages("ggplot2")
library(ggplot2)
search()
clear
install.packages("kernsmooth")
install.packages("kernSmooth")
install.packages('kernSmooth')
install.packages("kernSmooth")
install.packages("kernSmooth")
install.packages("slidify")
library(KernSmooth)
exit
quit
library(datasets)
data("iris")
iris
str(iris)
lapply(iris,mean)
lapply(split(iris,iris$Species))
lapply(split(iris,iris$Species),mean)
lapply(split(iris,iris$Species),mean,na.rm=TRUE)
lapply(split(iris,iris$Species),mean,na.rm=TRUE
lapply(split(iris,iris$Species),mean,na.rm=TRUE)
lapply(split(iris,iris$Species),mean)
colMeans(split(iris,iris$Species))
r1<-split(iris,iris$Species)
r1
colMeans(r1$virginica)
r1$virginica
r2<-r1$virginica
r2
class(r2)
mean(r2$Sepal.Length)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
library(datasets)
data(iris)
str(iris)
i1<-split(iris,iris$Species)
i1
apply(i1,1:4,mean)
colMeans(i1,1:4,mean)
mean(i1$virginica[,"Sepal.Length"])
i1$virginica[,"Sepal.Length"]
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
str(mmtcars)
str(mtcars)
summary(mtcars)
head(mtcars)
car2<-split(mtcars,mtcars$cyl)
car2
lapply(split(mtcars,mtcars$cyl),mean)
car
car2
apply(car2[,2],mean)
lapply(car2[,2],mean)
apply(car2[,2],2,mean)
car2
?tapply
lapply(mtcars,mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
head(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
a<-tapply(mtcars$hp, mtcars$cyl, mean)
a[3]-a[2]
debug(ls)
ls
bye
q
exit
with(mtcars, tapply(mpg, cyl, mean))
Q
d
x<-1
mtcars
f
Q
iris
?debug
undebug(ls)
mean()
mtcars
tapply(mtcars$hp,mtcars$cyl,mean)
209.21429-82.63636
tapply(mtcars$hp,mtcars$cyl,mean)
a<-tapply(mtcars$hp,mtcars$cyl,mean)
a[3]-a[1]
str(mean)
summary(mean())
summary(mean
summary(mean)
f<-gl(40,10)
f
library(datasets)
head(airquality)
str(airquality)
summary(airquality)
str(s)
rnomr(20)
rnorm(20)
plot(rnorm(100))
x<-1:100
x
plot(x,rnorm(100))
?plot
plot(x,rnorm(100))
?plot
his(x,rnorm(100))
?hist
hist(x,rnorm(100))
hist(rnorm(100))
hist(rnorm(1000))
hist(pnorm(1000))
hist(dnorm(1000))
hist(rnorm(1000))
dnorm(1000)
dnorm(100)
dnorm(1)
dnorm(2)
hist(qnorm(1000))
hist(rnorm(1000))
hist(rnorm(100000))
hist(rnorm(10))
hist(rnorm(100))
hist(rnorm(1000))
hist(rnorm(10000))
hist(rnorm(10000))
hist(rnorm(100000))
hist(rnorm(100000))
hist(rnorm(1000000000))
set.seed(1)
rnomr(5)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(2)
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(2)
rnorm(5)
set.seed(1)
rnorm(5)
rpois(10,,1)
rpois(10,1)
rpois(10,10)
rpois(10,0.5)
rpois(10,1)
hist(rpois)
hist(rpois(100,1))
set.seed(20)
x<-rnorm(100)
e<-rnorm(100)
e<-rnorm(100,0,2)
e
hist(x)
hist(e)
hist(x)
hist(e)
y<-0.5+2*x+e
y
hist(y)
plot(x,y)
rbinom(100,1,0.5)
rbinom(100,1,1)
rbinom(100,1,0.9
rbinom(100,1,0.9)
set.seed(1)
sample(1:100,10)
sample(rnorm(100),10)
system.time(rnorm(1000))
system.time(readLines("http://www.jhsph.edu"))
x<-hilbert(1000)
system.time(svd(x))
rdir
rpois
rpois(5,2)
set.seed(1)
rpois(5,2)
?ppois
setwd(rdir="/Users/YiJing/Documents/Rstudio")
rdir="/Users/YiJing/Documents/Rstudio"
setwd(rdir)
dir
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
rdir
setwd("/Users/YiJing/Documents/Rstudio/Assignment3")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
outcome[,11=as.numeric(outcome[,11])]
outcome[,11]=as.numeric(outcome[,11])
hist(outcome[,11])
outcome <- read.csv("outcome-of-care-measures.csv")
head(outcome)
hist(outcome[,11])
hist(as.numeric(outcome[,11])
hist(as.numeric(outcome[,11]))
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hist(as.numeric(outcome[,11]))
hist(as.numeric(outcome[,11]))
outcome[,$state]
outcome[,7]
split(outcome,$state)
split(outcome,$State)
split(outcome,outcome$State)
head(split(outcome,outcome$State))
outcome2=split(outcome,state)
outcome2=split(outcome,$State)
outcome2=split(outcome,outcome$State)
head(outcome2)
str(outcome2)
summary(outcome)
outcome2[,$CA]
outcome2[,outcome2$CA]
outcome2[outcome2$CA]
outcome2[$CA]
outcome[$CA]
?split
outcome2[,"CA"]
outcome2["CA"]
outcome2["AA"]
A=outcome2["AA"]
A
length(A)
class(A)
A-1
A-NULL
?"stop"
stop("invalid state")
stop("invalid sta")
is.na(A)
is.empty(A)
is.null(A)
A
as.numeric(A)
A
is.null(A)
a=2
a
is.null(a)
class(A)
A[1]
A[2]
as.numeric(A)
is.null(a)
is.null(A)
rm.na(A)
complete.cases(A)
complete.cases(a)
A
complete.cases(A)
is.na()
is.na(complete.cases(A))
?complete
length(A)
ca=outcome2
ca=outcome2["CA"]
length(ca)
ca
length(ca)
ca
head(ca)
class(ca)
as.numeric(ca)
ca[,2]
cahosp=split(ca,ca$Hospital Name)
cahosp=split(ca,ca$HospitalName)
cahosp=split(ca,$HospitalName)
ca[1,2]
ca
nrow(CA)
nrow(ca)
ca
outcome2
outcome2[,2]
outcome2["ca"]
outcome2["CA"]
rdir
setwd(rdir)
setwd("/Users/YiJing/Documents/Rstudio/Assignment2")
getwd()
getwd()
ass2>-"/Users/YiJing/Documents/Rstudio/ProgrammingAssignment2"
hw2<-getwd()
hw2
search()
ls()
rm(ls())
ls()
rm(ls)
rm(ls())
rm(a)
ls
ls()
rm(ls())
rm(list)
rm(list())
ls()
rm(list[])
rm(list=ls())
ls()
f=function(x,y){x^2+y/z}
f(2,3)
z=2
f(2,3)
rm(z)
pi
is.na(pia)
is.na(pi)
is.null(NULL)
source('~/Documents/Rstudio/ProgrammingAssignment2/cachemean.R')
x=c(1:100)
cachemean(x)
cachemean()
?<<
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
source('~/Documents/Rstudio/ProgrammingAssignment2/cachemean.R')
makeVector()
makeVector(x=c(1,2,3))
makeVector(x=c(1,2,3))
cachemean(x=c(1:10))
x=matrix(1:9,3,3)
x
solv(x)
solve(x)
inv(x)
inv(x)
solve(x)
x=(c(1,1,1,1,1,1,1,1,1),3,3)
x=matrix(c(1,1,1,1,1,1,1,1,1),3,3)
x
solve(x)
x=matrix(c(1,0,0,0,11,0,0,0,1),3,3)
x
solve(x)
